document.addEventListener("DOMContentLoaded", ageweightselect);
document.getElementById("clearbutton").addEventListener("click", clearCalc);

document.querySelectorAll('input[type="radio"]').forEach(function(radio) {
  radio.addEventListener('click', ageweightselect);
});

function ageweightselect() {
  let ageslct = document.getElementById("agebutton");
  let wtslct = document.getElementById("weightbutton");
  let agerow = document.getElementById("age-row");
  let weightrow = document.getElementById("weight-row");
  
  let adultChecked = document.getElementById('adult1').checked;
  let weightChecked = document.getElementById('weight1').checked;
  let ageChecked = document.getElementById('age1').checked;
  
  ageslct.style.display = adultChecked ? "none" : "revert";
  agerow.style.display = ageChecked ? "contents" : "none";
  weightrow.style.display = weightChecked ? "contents" : "none";
}

document.getElementById("agechoice").addEventListener("change", function() {
	document.getElementById("WInputType").innerHTML = "Approximate ";
	agecalc();
});

document.getElementById("weightsubmit").addEventListener("click", function() {
	document.getElementById("WInputType").innerHTML = "Entered ";
	document.getElementById("agechoice").value = '';
	weightcalc();
});

function agecalc() {
	sessionStorage.removeItem("patientweight");
	sessionStorage.removeItem("patientgeriatric");
	var age = document.getElementById("agechoice").value;
	age = parseFloat(age);
	document.getElementById('weightinput').value = '';
	var ageWeightData = {
		0: 3.5,
		0.5: 8,
		8: 25,
		9: 28,
		10: 32,
		11: 36
	};
	var ageweight = ageWeightData[age] || (age + 4) * 2;
	let weight = ageweight.toFixed(2);
	if (weight == 3.5) {
		sessionStorage.setItem("patientmode", "Newborn");
	} else {
		sessionStorage.setItem("patientmode", "Paediatric");
	}
	sessionStorage.setItem("patientweight", weight);
	displayParameters();
	runCalc();
}

function weightcalc() {
  sessionStorage.removeItem("patientgeriatric");
  var weightinput = parseFloat(document.getElementById('weightinput').value);
  if (isNaN(weightinput) || weightinput <= 0) {
    alert("Please enter a valid weight.");
    document.getElementById('weightinput').value = '';
    clearParameters();
  } else {
    if (weightinput > 0 && weightinput < 39) {
	  sessionStorage.setItem("patientmode", "Paediatric");
      document.getElementById('paed1').checked = true;
      document.getElementById('agebutton').style.display = "revert";
	      sessionStorage.setItem('patientweight', weightinput);
    displayParameters();
    runCalc();
    } else if (weightinput >= 39) {
      let dboxModal = document.createElement("div");
      dboxModal.classList.add("dboxModal");
      let message = document.createElement("h2");
      message.textContent = "Is the patient older than 70 years old or frail?";
      dboxModal.appendChild(message);
      let yesButton = document.createElement("button");
      yesButton.textContent = "Yes";
      let noButton = document.createElement("button");
      noButton.textContent = "No";
      const promise = new Promise((resolve) => {
        yesButton.addEventListener("click", function() {
          sessionStorage.setItem("patientmode", "Adult");
		  sessionStorage.setItem("patientgeriatric", "true");
          dboxModal.remove();
          resolve();
        });
        noButton.addEventListener("click", function() {
		  sessionStorage.setItem("patientgeriatric", "false");
		  sessionStorage.setItem("patientmode", "Adult");
          dboxModal.remove();
          resolve();
        });
      });
      dboxModal.appendChild(yesButton);
      dboxModal.appendChild(noButton);
      document.body.appendChild(dboxModal);
      promise.then(() => {
        console.log(sessionStorage.getItem("patientmode"));
        document.getElementById('adult1').checked = true;
        document.getElementById('agebutton').style.display = "none";
    sessionStorage.setItem('patientweight', weightinput);
    displayParameters();
    runCalc();
      });
    }
  }
}


function displayParameters() {
  let weight = parseFloat(sessionStorage.getItem("patientweight"));
  let mode = sessionStorage.getItem("patientmode");

  // Resets "Medication Contraindicated (medcontraid) classes
	var elements = document.querySelectorAll(".medcontraid");
	for (var i = 0; i < elements.length; i++) {
		elements[i].classList.remove("medcontraid");
	}

  // Determine mode and display appropriate weight and age buttons
  if (weight <= 4) {
	sessionStorage.setItem("patientmode", "Newborn");
    document.getElementById("paed1").checked = true;
    document.getElementById("agebutton").style.display = "revert";
  } else if (weight < 39) {
    document.getElementById("paed1").checked = true;
    document.getElementById("agebutton").style.display = "revert";
  } else {
    document.getElementById("adult1").checked = true;
    document.getElementById("agebutton").style.display = "none";
  }

  // Display Mode and Weight
  if (!Number.isInteger(weight)) {
    weight = weight.toFixed(2);
  }
  const isGeriatric = sessionStorage.getItem("patientgeriatric");
	if (isGeriatric === "true") {
		document.getElementById("mode").innerHTML = "Geriatric";
	} else {
		document.getElementById("mode").innerHTML = sessionStorage.getItem("patientmode");
	}
  document.getElementById("weight").innerHTML = weight + "kg";
  console.log(`Patient weight is stored as ${weight}kg, and mode is ${mode}. The patient is considered Geriatric: ${isGeriatric}.`);
  };

function runCalc() {
document.getElementById('calcpanel').click(); // simulate click on #calcpanel
setTimeout(() => {
document.getElementById('calcpanel').click(); // simulate second click on #calcpanel
}, 1);
  let MedicationList = ['calcResus', 'calcObservations', 'calcAdrenaline', 'calcAmiodarone', 'calcAtropine', 'calcCalcium', 'calcCefazolin', 'calcDroperidol', 'calcFentanyl', 'calcGlucose', 'calcKetamine', 'calcMetaraminol', 'calcMidazolam', 'calcMorphine', 'calcMorphineMidazolam', 'calcOndansetron', 'calcOlanzapine', 'calcNaloxone', 'calcParacetamol', 'calcPrednisolone', 'calcRocuronium', 'calcSaline', 'calcSodiumBicarbonate', 'calcSuxamethonium', 'calcTXA'];
  for (let i = 0; i < MedicationList.length; i++) {
    let medicationName = MedicationList[i];
    if (typeof window[medicationName] === 'function') {
      window[medicationName]();
    }
  };
  console.log('Loop to run medication calculations has been executed successfully.');
};

function clearCalc() {
	let MedicationList = ['clearResus', 'clearObservations', 'clearParameters', 'clearAdrenaline', 'clearAmiodarone', 'clearAtropine', 'clearCalcium', 'clearCefazolin', 'clearDroperidol', 'clearFentanyl', 'clearGlucose', 'clearKetamine', 'clearMetaraminol', 'clearMidazolam', 'clearMorphine', 'clearMorphineMidazolam', 'clearOndansetron', 'clearOlanzapine', 'clearNaloxone', 'clearParacetamol', 'clearPrednisolone', 'clearRocuronium', 'clearSaline', 'clearSodiumBicarbonate', 'clearSuxamethonium', 'clearTXA'];

  for (let i = 0; i < MedicationList.length; i++) {
    let medicationName = MedicationList[i];
    if (typeof window[medicationName] === 'function') {
      window[medicationName]();
    }
  }
  console.log('Loop to clear medications has been executed successfully.');
};

function clearParameters() {
	sessionStorage.removeItem("patientweight");
	sessionStorage.removeItem("patientmode");
	sessionStorage.removeItem("patientgeriatric");
	console.log(`Patient weight and mode have been cleared from Session Storage.`);	
  // Resets "Medication Contraindicated (medcontraid) classes
	var elements = document.querySelectorAll(".medcontraid");
	for (var i = 0; i < elements.length; i++) {
		elements[i].classList.remove("medcontraid");
	}
  document.getElementById("agechoice").selectedIndex = 0;
  document.getElementById("weightinput").value = "";
  document.getElementById("mode").innerHTML = "";
  document.getElementById("weight").innerHTML = "";
  console.log('Patient parameters have been cleared from page.');	
}